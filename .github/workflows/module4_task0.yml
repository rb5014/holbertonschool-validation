---
env:
  GH_TOKEN: ${{ github.token }}
name: module4_task0
"on":
  push:
    tags: "1.0.1"
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    types: [opened, reopened, synchronize]

permissions: read-all

jobs:
  builds:
    permissions: write-all
    name: job1
    runs-on: ubuntu-18.04
    container: golang:1.15.8-buster

    defaults:
      run:
        working-directory: ./module4_task0

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: install markdownlint
        run: npm install -g markdownlint-cli

      - name: install markdown-link-check
        run: npm install -g markdown-link-check

      - name: Install git and W3C-Validator
        run: |
          apt install git -y
          git clone https://github.com/holbertonschool/W3C-Validator.git

      - name: install hugo
        run: |
          npm install -g markdownlint-cli
          ./setup.sh

      - name: Validate Makefile
        run: |
          make lint
          make build
          make package
          make unit-tests
          make integration-tests
          make validate

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/1.0.1')
        with:
          files: |
            awesome-website.zip
            DEPLOY.md
          body: |
            # First project
            What is in the archive and how to unarchive it? zip
            What are the commands to start and stop the application? tag
            How to customize where the application logs are written?
            How to verify that the application is runing (healthcheck)?
      - run: gh release create v1.0.1 --title "v1.0.1" --notes DEPLOY.md\
            2>/dev/null || echo "OK"
      - name: release drafter
        uses: release-drafter/release-drafter@v5
      - name: deploy
        uses: nwtgck/actions-netlify@v1
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          deploy-message: "Deploy from GitHub Actions"
          publish-dir: "module4_task0/dist"
          production-branch: main
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
          enable-commit-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

# valid inputs are ['publish-dir', 'functions-dir', 'deploy-message',
# 'github-token', 'production-branch', 'production-deploy',
# 'enable-pull-request-comment', 'enable-commit-comment',
# 'enable-commit-status', 'overwrites-pull-request-comment',
# 'netlify-config-path', 'alias', 'github-deployment-environment',
# 'github-deployment-description', 'fails-without-credentials']
